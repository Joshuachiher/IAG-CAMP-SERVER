generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int              @id @default(autoincrement())
  name            String
  email           String           @unique
  phone           String?
  age             Int?
  gender          String?
  createdAt       DateTime         @default(now()) @map("created_at")
  answers         Answer[]
  formSubmissions FormSubmission[]
  signature       Signature?
}

model Signature {
  id        Int      @id @default(autoincrement())
  imageUrl  String
  createdAt DateTime @default(now())
  userId    Int      @unique
  user      User     @relation(fields: [userId], references: [id])
}

model QuestionOption {
  id         Int      @id @default(autoincrement())
  questionId Int      @map("question_id")
  value      String
  label      String
  question   Question @relation(fields: [questionId], references: [id])
}

model Answer {
  id               Int             @id @default(autoincrement())
  userId           Int             @map("user_id")
  questionId       Int             @map("question_id")
  answerText       String          @map("answer_text")
  createdAt        DateTime        @default(now()) @map("created_at")
  formSubmissionId Int?
  formSubmission   FormSubmission? @relation(fields: [formSubmissionId], references: [id])
  question         Question        @relation(fields: [questionId], references: [id])
  user             User            @relation(fields: [userId], references: [id])
}

model Question {
  id             Int              @id @default(autoincrement())
  isRequired     Boolean          @map("is_required")
  createdAt      DateTime         @default(now()) @map("created_at")
  questionType   QuestionType     @map("question_type")
  categoryId     Int?
  order          Int?             @default(0)
  description    String?
  key            String?
  placeholder    String?
  questionTextEn String
  questionTextId String
  answers        Answer[]
  category       Category?        @relation(fields: [categoryId], references: [id])
  options        QuestionOption[]
}

model Category {
  id        Int        @id @default(autoincrement())
  name      String     @unique
  questions Question[]
}

model FormSubmission {
  id        Int      @id @default(autoincrement())
  userId    Int
  createdAt DateTime @default(now())
  answers   Answer[]
  user      User     @relation(fields: [userId], references: [id])
}

enum QuestionType {
  text
  choice
  checkbox
  signature
  date
  terms
  number
  email
}
